<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>UDNZ</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.udnz.com/"/>
  <updated>2018-10-06T10:16:28.000Z</updated>
  <id>https://www.udnz.com/</id>
  
  <author>
    <name>Austin Luo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux 环境一键打包发布脚本</title>
    <link href="https://www.udnz.com/2018/10/06/Linux-%E7%8E%AF%E5%A2%83%E4%B8%80%E9%94%AE%E6%89%93%E5%8C%85%E5%8F%91%E5%B8%83%E8%84%9A%E6%9C%AC/"/>
    <id>https://www.udnz.com/2018/10/06/Linux-环境一键打包发布脚本/</id>
    <published>2018-10-06T10:16:28.000Z</published>
    <updated>2018-10-06T10:16:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>deploy.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本脚本用于开发环境，直接打包需要发布的文件，然后通过 SSH 复制到服务器并直接通过 pm2 启动执行。</span></span><br><span class="line"><span class="comment"># 主要功能：</span></span><br><span class="line"><span class="comment">#   - 打包本地文件</span></span><br><span class="line"><span class="comment">#   - 剪切备份 $BUILDDIR 目录（实际程序执行的目录）</span></span><br><span class="line"><span class="comment">#   - 复制到远程服务器 $BUILDDIR 目录</span></span><br><span class="line"><span class="comment">#   - 解压</span></span><br><span class="line"><span class="comment">#   - 使用备份的配置文件覆盖</span></span><br><span class="line"><span class="comment">#   - 启动程序</span></span><br><span class="line"></span><br><span class="line">WORKROOT=/path/to/your/dir/on/remote/server</span><br><span class="line">BUILDDIR=<span class="variable">$WORKROOT</span>/build</span><br><span class="line"></span><br><span class="line">SKEY=<span class="string">" -i ~/.ssh/your-ssh-key-file"</span></span><br><span class="line">SCHANNEL=<span class="string">"your-ssh-user@your-ssh-host"</span></span><br><span class="line">SROOT=<span class="variable">$SCHANNEL</span>:<span class="variable">$WORKROOT</span></span><br><span class="line">SBUILD=<span class="variable">$SCHANNEL</span>:<span class="variable">$BUILDDIR</span></span><br><span class="line">DATE=`date <span class="string">'+%Y-%m-%d%H%M%S'</span>`</span><br><span class="line"></span><br><span class="line">. ./bash/pack.sh <span class="variable">$DATE</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"copying files..."</span></span><br><span class="line">scp <span class="variable">$SKEY</span> -r ./build/build-<span class="variable">$DATE</span>.zip <span class="variable">$SROOT</span></span><br><span class="line">ssh <span class="variable">$SKEY</span> <span class="variable">$SCHANNEL</span> mv <span class="variable">$BUILDDIR</span> <span class="variable">$BUILDDIR</span>-<span class="variable">$DATE</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"unzipping files..."</span></span><br><span class="line">ssh <span class="variable">$SKEY</span> <span class="variable">$SCHANNEL</span> unzip -q <span class="variable">$WORKROOT</span>/build-<span class="variable">$DATE</span>.zip -d <span class="variable">$BUILDDIR</span></span><br><span class="line"><span class="comment">#ssh $SKEY $SCHANNEL cp $WORKROOT/bak/etc/config.json $BUILDDIR/etc/config.json</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"starting..."</span></span><br><span class="line">CMD=<span class="string">"cd <span class="variable">$BUILDDIR</span> ; pm2 restart ./etc/pm2.config.json"</span></span><br><span class="line">ssh <span class="variable">$SKEY</span> <span class="variable">$SCHANNEL</span> <span class="variable">$CMD</span></span><br></pre></td></tr></table></figure><p>pack.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要在项目根目录执行，如：./bash/pack.sh</span></span><br><span class="line"></span><br><span class="line">DATE=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$DATE</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">  DATE=`date <span class="string">'+%Y-%m-%d%H%M%S'</span>`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份本地配置，使用生产环境配置</span></span><br><span class="line">mv ./etc/config.json ./etc/config.dev.json.bak</span><br><span class="line">mv ./etc/config.prod.json ./etc/config.json</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"packing files..."</span></span><br><span class="line">zip -r -q ./build/build-<span class="variable">$DATE</span>.zip ./bin</span><br><span class="line">zip -r -q ./build/build-<span class="variable">$DATE</span>.zip ./dal</span><br><span class="line">zip -r -q ./build/build-<span class="variable">$DATE</span>.zip ./etc -i ./etc/*.json</span><br><span class="line">zip -r -q ./build/build-<span class="variable">$DATE</span>.zip ./controller</span><br><span class="line">zip -r -q ./build/build-<span class="variable">$DATE</span>.zip ./middlewares</span><br><span class="line">zip -r -q ./build/build-<span class="variable">$DATE</span>.zip ./models</span><br><span class="line">zip -r -q ./build/build-<span class="variable">$DATE</span>.zip ./node_modules</span><br><span class="line">zip -r -q ./build/build-<span class="variable">$DATE</span>.zip ./public</span><br><span class="line">zip -r -q ./build/build-<span class="variable">$DATE</span>.zip ./routes</span><br><span class="line">zip -r -q ./build/build-<span class="variable">$DATE</span>.zip ./utils</span><br><span class="line">zip -r -q ./build/build-<span class="variable">$DATE</span>.zip ./views</span><br><span class="line">zip -r -q ./build/build-<span class="variable">$DATE</span>.zip ./app.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 还原配置</span></span><br><span class="line">mv ./etc/config.json ./etc/config.prod.json</span><br><span class="line">mv ./etc/config.dev.json.bak ./etc/config.json</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;deploy.sh&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span
      
    
    </summary>
    
      <category term="DevOps" scheme="https://www.udnz.com/categories/DevOps/"/>
    
    
      <category term="Linux, DevOps" scheme="https://www.udnz.com/tags/Linux-DevOps/"/>
    
  </entry>
  
  <entry>
    <title>通过 SSH 隧道链接远程 MySQL</title>
    <link href="https://www.udnz.com/2018/10/01/%E9%80%9A%E8%BF%87-SSH-%E9%9A%A7%E9%81%93%E9%93%BE%E6%8E%A5%E8%BF%9C%E7%A8%8B-MySQL/"/>
    <id>https://www.udnz.com/2018/10/01/通过-SSH-隧道链接远程-MySQL/</id>
    <published>2018-10-01T12:18:10.000Z</published>
    <updated>2018-10-01T12:18:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>场景：</p><ul><li>SSH 跳板机：10.0.0.1</li><li>MySQL 数据库：10.0.0.2:3306</li></ul><p>MySQL 部署的机器不允许 SSH 连接，并且数据库端口只允许 localhost 或 10.0.0.1 这台跳板机访问，此时本机可以通过 ssh 连上跳板机，通过 ssh 建立的隧道端口转发连接上 MySQL 数据库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本机连接跳板机</span></span><br><span class="line"><span class="comment"># 打开本机 13306 端口，代理到 ssh 跳板机，并且通过跳板机访问 10.0.0.2:3306</span></span><br><span class="line">ssh -fCPN -L localhost:13306:10.0.0.2:3306 root@10.0.0.1</span><br><span class="line"><span class="comment"># 参数解释</span></span><br><span class="line"><span class="comment"># -C    使用压缩功能,是可选的,加快速度.</span></span><br><span class="line"><span class="comment"># -P    用一个非特权端口进行出去的连接.</span></span><br><span class="line"><span class="comment"># -f    一旦SSH完成认证并建立port forwarding,则转入后台运行.</span></span><br><span class="line"><span class="comment"># -N    不执行远程命令.该参数在只打开转发端口时很有用（V2版本SSH支持）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接 MySQL</span></span><br><span class="line">mysql -uusername -ppassword -hlocalhost -P13306</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="http://mingxinglai.com/cn/2015/09/connect-mysql-via-ssh-tunnel/" target="_blank" rel="noopener">http://mingxinglai.com/cn/2015/09/connect-mysql-via-ssh-tunnel/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SSH 跳板机：10.0.0.1&lt;/li&gt;
&lt;li&gt;MySQL 数据库：10.0.0.2:3306&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MySQL 部署的机器不允许 SSH 连接，并且数据库端口只允许 localhost 或 10.0.0.1 这台
      
    
    </summary>
    
    
      <category term="SSH" scheme="https://www.udnz.com/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>Understanding Architecture</title>
    <link href="https://www.udnz.com/2018/09/30/Understanding-Architecture/"/>
    <id>https://www.udnz.com/2018/09/30/Understanding-Architecture/</id>
    <published>2018-09-30T07:13:43.000Z</published>
    <updated>2018-09-30T07:13:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="架构是这样定义的"><a href="#架构是这样定义的" class="headerlink" title="架构是这样定义的"></a>架构是这样定义的</h1><ul><li>每个系统都有一个架构</li><li>架构由架构元素以及相互之间的关系构成</li><li>系统是为了满足 <strong>利益相关者（stakeholder）</strong> 的需求而构建的</li><li>利益相关者都有自己的<strong>关注点（concerns）</strong></li><li>架构由架构文档描述</li><li>架构文档描述了一系列的<strong>架构视角</strong></li><li>每个视角都解决并且对应到利益相关者的关注点。</li></ul><p>架构师的首要任务是尽最大可能找出所有利益相关者，业务方，产品经理，客户/用户，开发经理，工程师，项目经理，测试人员，运维人员，产品运营人员等等都有可能是利益相关者，架构师要充分和利益相关者沟通，深入理解他们的关注点和痛点，并出架构解决这些关注点。架构师常犯错误是漏掉重要的利益相关者，沟通不充分，都会造成架构有欠缺，不能满足利益相关者的需求。利益相关者的关注点是有可能冲突的，比如管理层（可管理性）vs技术方（性能），业务方（多快好省）vs 技术方（可靠稳定），这需要架构师去灵活平衡，如何平衡体现了架构师的水平和价值。</p><blockquote><p>Architecture represents the significant design decisions that shape a system, where significant is measured by cost of change.</p><p>—- Grady Booch, UML的创始人之一</p><p>架构表示对一个系统的成型起关键作用的设计决策，这里的关键性是由“改变它”的成本来决定的。</p></blockquote><p>微服务中每个服务可以独立演变，它的cost of change比较小，整体架构比较灵活，是一种支持创新的演化式架构。</p><h1 id="Architecture-Requirements"><a href="#Architecture-Requirements" class="headerlink" title="Architecture Requirements"></a>Architecture Requirements</h1><table><thead><tr><th>Requirement</th><th>Feature</th><th>Description</th></tr></thead><tbody><tr><td>Easy to separate</td><td>Autonomy</td><td>易分离，自治性</td></tr><tr><td>Easy to understand</td><td>Understandablility</td><td>可理解性</td></tr><tr><td>Easy to extend</td><td>Extensibility</td><td>可延展性</td></tr><tr><td>Easy to change</td><td>Changeability</td><td>可变性</td></tr><tr><td>Easy to replace</td><td>Replaceability</td><td>可替换性</td></tr><tr><td>Easy to deploy</td><td>Deployability</td><td>可部署性</td></tr><tr><td>Easy to scale</td><td>Scalability</td><td>伸缩性，可扩展性</td></tr><tr><td>Easy to recover</td><td>Resilience</td><td>可恢复性</td></tr><tr><td>Easy to connect</td><td>Uniform interface</td><td>易连接，易集成，统一接口</td></tr><tr><td>Easy to afford</td><td>Cost-efficiency</td><td>成本效率，性价比</td></tr></tbody></table><p>架构的目标是用于管理复杂性、易变性和不确定性，以确保在长期的系统演化过程中，一部分架构的变化不会对架构的其它部分产生不必要的负面影响。这样做可以确保业务和研发效率的敏捷，让应用的易变部分能够频繁地变化，对应用的其它部分的影响尽可能的小。</p><h1 id="微服务更多是关于组织和团队，而不是技术"><a href="#微服务更多是关于组织和团队，而不是技术" class="headerlink" title="微服务更多是关于组织和团队，而不是技术"></a>微服务更多是关于组织和团队，而不是技术</h1><blockquote><p>organizations which design systems … are constrained to produce designs which are copies of the communication structures of these organizations.</p><p>康威定律：设计系统的组织，其产生的设计和架构等价于组织间的沟通结构.</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/1411204-7b51d528373115c0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt="image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;架构是这样定义的&quot;&gt;&lt;a href=&quot;#架构是这样定义的&quot; class=&quot;headerlink&quot; title=&quot;架构是这样定义的&quot;&gt;&lt;/a&gt;架构是这样定义的&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;每个系统都有一个架构&lt;/li&gt;
&lt;li&gt;架构由架构元素以及相互之间的关系构成&lt;/
      
    
    </summary>
    
      <category term="Architecture" scheme="https://www.udnz.com/categories/Architecture/"/>
    
    
  </entry>
  
  <entry>
    <title>Kubernetes 环境搭建</title>
    <link href="https://www.udnz.com/2018/09/30/Kubernetes/"/>
    <id>https://www.udnz.com/2018/09/30/Kubernetes/</id>
    <published>2018-09-30T03:08:49.000Z</published>
    <updated>2018-10-08T07:57:21.498Z</updated>
    
    <content type="html"><![CDATA[<h1 id="kubernetes"><a href="#kubernetes" class="headerlink" title="kubernetes"></a>kubernetes</h1><p>指引：<a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/" target="_blank" rel="noopener">https://kubernetes.io/docs/tasks/tools/install-kubectl/</a></p><h2 id="安装-VM-驱动"><a href="#安装-VM-驱动" class="headerlink" title="安装 VM 驱动"></a>安装 VM 驱动</h2><blockquote><p>腾讯云 CVM 未能启用驱动启动 minikube，安装驱动的过程可忽略。</p></blockquote><h2 id="VirtualBox"><a href="#VirtualBox" class="headerlink" title="- VirtualBox"></a>- VirtualBox</h2><blockquote><p>CentOS：虚拟机不支持内部 VM，未在物理机上尝试</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d/</span><br><span class="line">wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo</span><br><span class="line">yum update</span><br><span class="line"></span><br><span class="line">rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line">yum install -y binutils gcc make patch libgomp glibc-headers glibc-devel kernel-headers kernel-devel dkms</span><br><span class="line">yum install -y VirtualBox-5.2</span><br><span class="line"></span><br><span class="line">service vboxdrv start</span><br></pre></td></tr></table></figure><ul><li><a href="https://www.if-not-true-then-false.com/2010/install-virtualbox-with-yum-on-fedora-centos-red-hat-rhel/" target="_blank" rel="noopener">https://www.if-not-true-then-false.com/2010/install-virtualbox-with-yum-on-fedora-centos-red-hat-rhel/</a></li><li><a href="https://www.virtualbox.org/wiki/Linux_Downloads" target="_blank" rel="noopener">https://www.virtualbox.org/wiki/Linux_Downloads</a></li><li><a href="https://www.cnblogs.com/harry-h/p/6405433.html" target="_blank" rel="noopener">https://www.cnblogs.com/harry-h/p/6405433.html</a></li></ul><blockquote><p>MAC 上可以直接下载安装：<a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="noopener">https://www.virtualbox.org/wiki/Downloads</a></p></blockquote><h2 id="KVM2"><a href="#KVM2" class="headerlink" title="- KVM2"></a>- KVM2</h2><blockquote><p>安装成功，但 <code>minikube start</code> 时未能尝试成功</p></blockquote><p><a href="https://github.com/kubernetes/minikube/blob/master/docs/drivers.md#kvm2-driver" target="_blank" rel="noopener">https://github.com/kubernetes/minikube/blob/master/docs/drivers.md#kvm2-driver</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum -y install libvirt-daemon-kvm qemu-kvm</span><br><span class="line"></span><br><span class="line">curl -Lo docker-machine-driver-kvm2 https://storage.googleapis.com/minikube/releases/latest/docker-machine-driver-kvm2 \</span><br><span class="line">&amp;&amp; chmod +x docker-machine-driver-kvm2 \</span><br><span class="line">&amp;&amp; sudo cp docker-machine-driver-kvm2 /usr/<span class="built_in">local</span>/bin/ \</span><br><span class="line">&amp;&amp; rm docker-machine-driver-kvm2</span><br></pre></td></tr></table></figure><p>附：查看虚拟机网络以及使用不同的网络启动 minikube</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum -y install libvirt virt-install bridge-utils</span><br><span class="line"><span class="comment"># 查看虚拟机网络</span></span><br><span class="line">virsh net-list --all</span><br><span class="line"><span class="comment"># 使用不同的虚拟机网络(minikube-net)</span></span><br><span class="line">minikube start --vm-driver kvm2 --kvm-network minikube-net</span><br></pre></td></tr></table></figure><h2 id="其他驱动"><a href="#其他驱动" class="headerlink" title="- 其他驱动"></a>- 其他驱动</h2><p>指引：<a href="https://github.com/kubernetes/minikube/blob/master/docs/drivers.md#kvm-driver" target="_blank" rel="noopener">https://github.com/kubernetes/minikube/blob/master/docs/drivers.md#kvm-driver</a></p><h2 id="安装-kubectl"><a href="#安装-kubectl" class="headerlink" title="安装 kubectl"></a>安装 kubectl</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line">yum install -y kubectl</span><br><span class="line"></span><br><span class="line"><span class="comment"># MAC: 方式一</span></span><br><span class="line">brew install kubernetes-cli</span><br><span class="line"><span class="comment"># MAC：方式二</span></span><br><span class="line">curl -Lo kubectl http://storage.googleapis.com/kubernetes-release/release/v1.5.1/bin/darwin/amd64/kubectl &amp;&amp; chmod +x kubectl &amp;&amp; sudo mv kubectl /usr/<span class="built_in">local</span>/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装校验</span></span><br><span class="line">kubectl version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保服务已启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet.service</span><br><span class="line">systemctl start kubelet.service</span><br></pre></td></tr></table></figure><h2 id="安装-minikube"><a href="#安装-minikube" class="headerlink" title="安装 minikube"></a>安装 minikube</h2><p>指引：<a href="https://github.com/kubernetes/minikube/releases" target="_blank" rel="noopener">https://github.com/kubernetes/minikube/releases</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.29.0/minikube-linux-amd64 \</span><br><span class="line">    &amp;&amp; chmod +x minikube \</span><br><span class="line">    &amp;&amp; sudo cp minikube /usr/<span class="built_in">local</span>/bin/ \</span><br><span class="line">    &amp;&amp; rm minikube</span><br><span class="line"></span><br><span class="line"><span class="comment"># MAC</span></span><br><span class="line">brew cask install minikube</span><br></pre></td></tr></table></figure><hr><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p><strong>（使用 KVM2 驱动）运行之前</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> libvirtd &amp;&amp; systemctl start libvirtd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看进程文件</span></span><br><span class="line">ls -l /var/run/libvirt/libvirt-sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># 若进程文件不存在，则修改配置：</span></span><br><span class="line">vi /etc/libvirt/libvirtd.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消行前注释，重新启动服务</span></span><br><span class="line"><span class="comment">#unix_sock_dir = "/var/run/libvirt"</span></span><br></pre></td></tr></table></figure><h2 id="拉取-k8s-相关镜像"><a href="#拉取-k8s-相关镜像" class="headerlink" title="拉取 k8s 相关镜像"></a>拉取 k8s 相关镜像</h2><p>原本在 <code>minikube start</code> 命令中会自动拉取镜像，但是因为众所周知的原因，我们无法成功拉取到镜像。这里可以使用阿里 docker 容器镜像服务：<a href="https://dev.aliyun.com/search.html" target="_blank" rel="noopener">https://dev.aliyun.com/search.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入虚拟机拉取，而非本机</span></span><br><span class="line">minikube ssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/k8sth/kube-apiserver-amd64:v1.10.0</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/k8sth/kube-controller-manager-amd64:v1.10.0</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/k8sth/kube-scheduler-amd64:v1.10.0</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/k8sth/etcd-amd64:3.1.12</span><br><span class="line">docker pull registry.cn-shenzhen.aliyuncs.com/kubernetes_google/kubernetes-dashboard-amd64:v1.10.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 tag</span></span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/k8sth/kube-apiserver-amd64:v1.10.0 k8s.gcr.io/kube-apiserver-amd64:v1.10.0</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/k8sth/kube-controller-manager-amd64:v1.10.0 k8s.gcr.io/kube-controller-manager-amd64:v1.10.0</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/k8sth/kube-scheduler-amd64:v1.10.0 k8s.gcr.io/kube-scheduler-amd64:v1.10.0</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/k8sth/etcd-amd64:3.1.12 k8s.gcr.io/etcd-amd64:3.1.12</span><br><span class="line">docker tag registry.cn-shenzhen.aliyuncs.com/kubernetes_google/kubernetes-dashboard-amd64:v1.10.0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.0</span><br></pre></td></tr></table></figure><h2 id="Kubenetes"><a href="#Kubenetes" class="headerlink" title="Kubenetes"></a>Kubenetes</h2><p>指引：<a href="https://kubernetes.io/docs/setup/minikube/#quickstart" target="_blank" rel="noopener">https://kubernetes.io/docs/setup/minikube/#quickstart</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在代理下运行时，需要指定正确的代理，否则 minikube 在内部访问网络会有问题</span></span><br><span class="line"><span class="comment"># 注意，代理地址应当是在虚拟机中能够访问的地址，不能使用 127.0.0.1、localhost 这种</span></span><br><span class="line">https_proxy=http://web-proxy.oa.com:8080</span><br><span class="line">minikube start \</span><br><span class="line">    --docker-env http_proxy=http://web-proxy.oa.com:8080 \</span><br><span class="line">    --docker-env https_proxy=http://web-proxy.oa.com:8080 \</span><br><span class="line">    --docker-env no_proxy=192.168.99.0/24</span><br><span class="line">    --vm-driver=none</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装和启动过程中可能产生错误，通过该命令查看日志</span></span><br><span class="line">minikube logs -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 k8s（ CentOS 上不使用任何 vm 驱动，MAC 上默认可使用 VirtualBox）</span></span><br><span class="line">minikube start \</span><br><span class="line">    --network-plugin=cni \</span><br><span class="line">    --container-runtime=containerd \</span><br><span class="line">    --bootstrapper=kubeadm</span><br><span class="line">    --vm-driver=none</span><br><span class="line"></span><br><span class="line"><span class="comment"># Dashboard</span></span><br><span class="line"><span class="comment"># https://github.com/kubernetes/dashboard</span></span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml</span><br><span class="line">kubectl proxy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署及运行镜像</span></span><br><span class="line">kubectl run hello-minikube --image=registry.cn-hangzhou.aliyuncs.com/acs/echoserver:1.4 --port=8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出服务</span></span><br><span class="line">kubectl expose deployment hello-minikube --<span class="built_in">type</span>=NodePort</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询 Pod</span></span><br><span class="line">kubectl get pod</span><br><span class="line">kubectl get pods --all-namespaces</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">kubectl describe --namespace=kube-system po kubernetes-dashboard-6f4cfc5d87-d647l</span><br><span class="line">kubectl logs kubernetes-dashboard-6f4cfc5d87-x976v --namespace=kube-system</span><br><span class="line">kubectl cluster-info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用服务</span></span><br><span class="line">curl $(minikube service hello-minikube --url)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除服务</span></span><br><span class="line">kubectl delete services hello-minikube</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除部署</span></span><br><span class="line">kubectl delete deployment hello-minikube</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止 k8s</span></span><br><span class="line">minikube stop</span><br></pre></td></tr></table></figure><h2 id="向-kubernetes-添加账号"><a href="#向-kubernetes-添加账号" class="headerlink" title="向 kubernetes 添加账号"></a>向 kubernetes 添加账号</h2><p><a href="https://github.com/kubernetes/dashboard/wiki/Creating-sample-user" target="_blank" rel="noopener">https://github.com/kubernetes/dashboard/wiki/Creating-sample-user</a></p><h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><p><strong>failed to create kubelet: misconfiguration: kubelet cgroup driver: “cgroupfs” is different from docker cgr…driver: “systemd”</strong></p><p>该问题因为 docker 的配置和 kubelet 的配置不一致导致。</p><p>使用 docker info 打印 docker 信息：</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_16_centos kubelet.service.d]# docker info | grep Driver</span><br><span class="line"> <span class="literal">WARNING</span>: Usage <span class="keyword">of</span> loopback devices <span class="keyword">is</span> strongly discouraged <span class="keyword">for</span> production <span class="keyword">use</span>. <span class="keyword">Use</span> `<span class="comment">--storage-opt dm.thinpooldev` to specify a custom block storage device.</span></span><br><span class="line">  <span class="literal">WARNING</span>: You<span class="symbol">'re</span> <span class="keyword">not</span> using the <span class="keyword">default</span> seccomp profile</span><br><span class="line">Storage Driver: devicemapper</span><br><span class="line">Logging Driver: journald</span><br><span class="line">Cgroup Driver: systemd</span><br></pre></td></tr></table></figure><p>而查看 kubelet 服务的启动参数（<code>--cgroup-driver</code>），其设置为 <code>cgroupfs</code>：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_16_centos kubelet.service.d]# more /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Wants</span>=docker.socket</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=</span><br><span class="line"><span class="attribute">ExecStart</span>=/usr/bin/kubelet <span class="attribute">--hostname-override</span>=minikube <span class="attribute">--cluster-domain</span>=cluster.local <span class="attribute">--cgroup-driver</span>=cgroupfs <span class="attribute">--authorization-mode</span>=Webhook <span class="attribute">--client-ca-file</span>=/var/lib/minikube/certs/ca.crt <span class="attribute">--fail-swap-on</span>=<span class="literal">false</span> <span class="attribute">--kubeconfig</span>=/etc/kubernetes/ku</span><br><span class="line">belet.conf <span class="attribute">--bootstrap-kubeconfig</span>=/etc/kubernetes/bootstrap-kubelet.conf <span class="attribute">--pod-manifest-path</span>=/etc/kubernetes/manifests <span class="attribute">--allow-privileged</span>=<span class="literal">true</span> <span class="attribute">--cluster-dns</span>=10.96.0.10 <span class="attribute">--cadvisor-port</span>=0</span><br><span class="line"></span><br><span class="line">[Install]</span><br></pre></td></tr></table></figure><p>此时，修改 docker 的服务参数（<code>vi /usr/lib/systemd/system/docker.service</code>），将其中的 <code>--exec-opt native.cgroupdriver</code> 参数值改为 <code>cgroupfs</code> 。</p><p>然后，重启 docker，重启 kubelet</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload &amp;&amp; systemctl restart docker &amp;&amp; systemctl restart kubelet</span><br></pre></td></tr></table></figure><p><strong>[ERROR FileContent–proc-sys-net-bridge-bridge-nf-call-iptables]: /proc/sys/net/bridge/bridge-nf-call-iptables contents are not set to 1</strong></p><p>解决方案：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/bridge/bridge-nf-call-iptables</span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/bridge/bridge-nf-call-ip6tables</span><br></pre></td></tr></table></figure></p><p><strong>Unable to update cni config: No networks found in /etc/cni/net.d</strong></p><p>yum install -y kubernetes-cni</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.jianshu.com/p/a42eeb66a19c" target="_blank" rel="noopener">https://www.jianshu.com/p/a42eeb66a19c</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;kubernetes&quot;&gt;&lt;a href=&quot;#kubernetes&quot; class=&quot;headerlink&quot; title=&quot;kubernetes&quot;&gt;&lt;/a&gt;kubernetes&lt;/h1&gt;&lt;p&gt;指引：&lt;a href=&quot;https://kubernetes.io/docs
      
    
    </summary>
    
      <category term="Micro Service" scheme="https://www.udnz.com/categories/Micro-Service/"/>
    
    
      <category term="k8s" scheme="https://www.udnz.com/tags/k8s/"/>
    
      <category term="kubernetes" scheme="https://www.udnz.com/tags/kubernetes/"/>
    
  </entry>
  
</feed>
